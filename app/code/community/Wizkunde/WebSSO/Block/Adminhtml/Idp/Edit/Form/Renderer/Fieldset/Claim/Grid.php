<?php
class Wizkunde_WebSSO_Block_Adminhtml_Idp_Edit_Form_Renderer_Fieldset_Claim_Grid extends Mage_Adminhtml_Block_Widget_Grid
{
    protected $_pagerVisibility = false;
    protected $_filterVisibility = false;
    
    public function __construct()
    {
        parent::__construct();
        $this->setId('claimGrid');
        $this->setDefaultSort('entity_id');
        $this->setSaveParametersInSession(true);
    }

    protected function _prepareLayout()
    {
        parent::_prepareLayout(); // TODO: Change the autogenerated stub

        $this->unsetChild('export_button');
        $this->unsetChild('reset_filter_button');
        $this->unsetChild('search_button');
    }

    protected function _prepareCollection()
    {
        $collection = Mage::getResourceModel('websso/claim_collection');
        $collection->addFieldToFilter('server_id', $this->getRequest()->get('id'));

        $this->setCollection($collection);

        return parent::_prepareCollection();
    }

    protected function _prepareColumns()
    {
        $this->addColumn('external[]', array(
            'renderer'      => new Wizkunde_WebSSO_Block_Adminhtml_Widget_Grid_Column_Renderer_External(),
            'header'    => Mage::helper('websso')->__('Identity Provider Mapping'),
            'index'     => 'external',
            'sortable'  => false
        ));

        $this->addColumn('internal[]', array(
            'type'      => 'select',
            'header'    => Mage::helper('websso')->__('Internal Mapping'),
            'index'     => 'internal',
            'options'    => $this->getAvailableAttributes(),
            'sortable'  => false
        ));

        $this->addColumn('actions', array(
            'type'      => 'action',
            'header'     => 'Actions',
            'class'     => 'action',
            'actions'   => array(
                'delete'    => array(
                    'caption' => 'Delete Row',
                    'onclick' => '$(this).up(1).remove();',
                    'type'  => 'button'
                )
            )
        ));

        return parent::_prepareColumns();
    }

    protected function getAvailableAttributes()
    {
        $attributes = Mage::getModel('customer/entity_attribute_collection')->addVisibleFilter();

        $values = array();
        foreach ($attributes as $attribute) {
            if (($label = $attribute->getFrontendLabel()))
                $values[$attribute->getAttributeCode()] = 'Customer: ' . $label;
        }

        $attributes = Mage::getModel('customer/entity_address_attribute_collection')->addVisibleFilter();
        foreach ($attributes as $attribute) {
            if (($label = $attribute->getFrontendLabel()))
                $values['billing_' . $attribute->getAttributeCode()] = 'Billing Address: ' . $label;
        }

        foreach ($attributes as $attribute) {
            if (($label = $attribute->getFrontendLabel()))
                $values['shipping_' . $attribute->getAttributeCode()] = 'Shipping Address: ' . $label;
        }

        return $values;
    }
}